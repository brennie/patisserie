use std::{
    env,
    fs::File,
    io::{BufWriter, Write},
    path::Path,
};

use failure::Error;
use phf_codegen::Set;

fn main() -> Result<(), Error> {
    let path =
        Path::new(&env::var("OUT_DIR").expect("no OUT_DIR during build?")).join("lang.codegen.rs");
    let mut file = BufWriter::new(File::create(&path)?);

    write!(&mut file, "#[allow(clippy::all)]\n")?;
    write!(&mut file, "static LANGUAGES: phf::Set<&'static str> = ")?;

    let mut set = Set::new();

    for lang in LANGUAGES {
        set.entry(*lang);
    }

    set.build(&mut file)?;

    write!(&mut file, ";\n")?;

    Ok(())
}

const LANGUAGES: &'static [&'static str] = &[
    "abap",
    "ada",
    "agda",
    "ahk",
    "alloy",
    "antlr",
    "antlr-as",
    "antlr-cpp",
    "antlr-csharp",
    "antlr-java",
    "antlr-objc",
    "antlr-perl",
    "antlr-python",
    "antlr-ruby",
    "apacheconf",
    "apl",
    "applescript",
    "as",
    "as3",
    "aspectj",
    "aspx-cs",
    "aspx-vb",
    "asy",
    "at",
    "autodetect",
    "autoit",
    "awk",
    "basemake",
    "bash",
    "bat",
    "bbcode",
    "befunge",
    "blitzbasic",
    "blitzmax",
    "boo",
    "brainfuck",
    "bro",
    "bugs",
    "c",
    "c-objdump",
    "ca65",
    "cbmbas",
    "ceylon",
    "cfc",
    "cfengine3",
    "cfm",
    "cfs",
    "chai",
    "chapel",
    "cheetah",
    "cirru",
    "clay",
    "clojure",
    "clojurescript",
    "cmake",
    "cobol",
    "cobolfree",
    "coffee-script",
    "common-lisp",
    "console",
    "control",
    "coq",
    "cpp",
    "cpp-objdump",
    "croc",
    "cryptol",
    "csharp",
    "css",
    "css+django",
    "css+erb",
    "css+genshitext",
    "css+lasso",
    "css+mako",
    "css+mozpreproc",
    "css+myghty",
    "css+php",
    "css+smarty",
    "cucumber",
    "cuda",
    "cypher",
    "cython",
    "d",
    "d-objdump",
    "dart",
    "delphi",
    "dg",
    "diff",
    "django",
    "docker",
    "dpatch",
    "dtd",
    "duel",
    "dylan",
    "dylan-console",
    "dylan-lid",
    "ebnf",
    "ec",
    "ecl",
    "eiffel",
    "elixir",
    "erb",
    "erl",
    "erlang",
    "evoque",
    "factor",
    "fan",
    "fancy",
    "felix",
    "fortran",
    "foxpro",
    "fsharp",
    "gap",
    "gas",
    "genshi",
    "genshitext",
    "glsl",
    "gnuplot",
    "go",
    "golo",
    "gooddata-cl",
    "gosu",
    "groff",
    "groovy",
    "gst",
    "haml",
    "handlebars",
    "haskell",
    "haxeml",
    "html",
    "html+cheetah",
    "html+django",
    "html+evoque",
    "html+genshi",
    "html+handlebars",
    "html+lasso",
    "html+mako",
    "html+myghty",
    "html+php",
    "html+smarty",
    "html+twig",
    "html+velocity",
    "http",
    "hx",
    "hybris",
    "hylang",
    "i6t",
    "idl",
    "idris",
    "iex",
    "igor",
    "inform6",
    "inform7",
    "ini",
    "io",
    "ioke",
    "ipython2",
    "ipython3",
    "ipythonconsole",
    "irc",
    "isabelle",
    "jade",
    "jags",
    "jasmin",
    "java",
    "javascript+mozpreproc",
    "jlcon",
    "js",
    "js+cheetah",
    "js+django",
    "js+erb",
    "js+genshitext",
    "js+lasso",
    "js+mako",
    "js+myghty",
    "js+php",
    "js+smarty",
    "json",
    "jsonld",
    "jsp",
    "julia",
    "kal",
    "kconfig",
    "koka",
    "kotlin",
    "lagda",
    "lasso",
    "lcry",
    "lean",
    "lhs",
    "lidr",
    "lighty",
    "limbo",
    "liquid",
    "live-script",
    "llvm",
    "logos",
    "logtalk",
    "lsl",
    "lua",
    "make",
    "mako",
    "maql",
    "markdown",
    "mask",
    "mason",
    "mathematica",
    "matlab",
    "matlabsession",
    "minid",
    "modelica",
    "modula2",
    "monkey",
    "moocode",
    "moon",
    "mozhashpreproc",
    "mozpercentpreproc",
    "mql",
    "mscgen",
    "mupad",
    "mxml",
    "myghty",
    "mysql",
    "nasm",
    "nemerle",
    "nesc",
    "newlisp",
    "newspeak",
    "nginx",
    "nimrod",
    "nit",
    "nixos",
    "nsis",
    "numpy",
    "objdump",
    "objdump-nasm",
    "objective-c",
    "objective-c++",
    "objective-j",
    "ocaml",
    "octave",
    "ooc",
    "opa",
    "openedge",
    "pan",
    "pawn",
    "perl",
    "perl6",
    "php",
    "pig",
    "pike",
    "plpgsql",
    "postgresql",
    "postscript",
    "pot",
    "pov",
    "powershell",
    "prolog",
    "properties",
    "protobuf",
    "psql",
    "puppet",
    "py3tb",
    "pycon",
    "pypylog",
    "pytb",
    "python",
    "python3",
    "qbasic",
    "qml",
    "racket",
    "ragel",
    "ragel-c",
    "ragel-cpp",
    "ragel-d",
    "ragel-em",
    "ragel-java",
    "ragel-objc",
    "ragel-ruby",
    "raw",
    "rb",
    "rbcon",
    "rconsole",
    "rd",
    "rebol",
    "red",
    "redcode",
    "registry",
    "resource",
    "rexx",
    "rhtml",
    "robotframework",
    "rql",
    "rsl",
    "rst",
    "rust",
    "sass",
    "scala",
    "scaml",
    "scheme",
    "scilab",
    "scss",
    "shell-session",
    "slim",
    "smali",
    "smalltalk",
    "smarty",
    "sml",
    "snobol",
    "sourceslist",
    "sp",
    "sparql",
    "spec",
    "splus",
    "sql",
    "sqlite3",
    "squidconf",
    "ssp",
    "stan",
    "swift",
    "swig",
    "systemverilog",
    "tads3",
    "tcl",
    "tcsh",
    "tea",
    "tex",
    "text",
    "textile",
    "todotxt",
    "trac-wiki",
    "treetop",
    "ts",
    "twig",
    "urbiscript",
    "vala",
    "vb.net",
    "vctreestatus",
    "velocity",
    "verilog",
    "vgl",
    "vhdl",
    "vim",
    "xml",
    "xml+cheetah",
    "xml+django",
    "xml+erb",
    "xml+evoque",
    "xml+lasso",
    "xml+mako",
    "xml+myghty",
    "xml+php",
    "xml+smarty",
    "xml+velocity",
    "xquery",
    "xslt",
    "xtend",
    "xul+mozpreproc",
    "yaml",
    "yaml+jinja",
    "zephir",
];
